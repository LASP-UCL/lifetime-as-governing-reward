import gym
import tqdm
import torch
import torch.nn as nn
import numpy as np
import matplotlib.pyplot as plt
import time
import pygame

from models import ActorNet

device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
MODEL_PATH = 'actor.pt'
HIDDEN_SIZE = 32
MAX_TIMESTEPS = 1000

# Define environment
env = gym.make('Pendulum-v1', new_step_api=True, render_mode="human")

# Define models
actor_net = torch.load('actor.pth')

# Initialise environment state
state = env.reset(seed=42)
total_reward, ep = 0, 0

for step in range(MAX_TIMESTEPS):
    action = actor_net(torch.tensor(state)).detach().numpy()
    state, reward, terminated, truncated, _ = env.step(action)
    total_reward += reward
    if terminated or truncated:
        state = torch.tensor(env.reset())
        ep += 1
        print(f"Episode {ep} finished | Reward {total_reward}\n")
        total_reward = 0
        time.sleep(1)
env.close()